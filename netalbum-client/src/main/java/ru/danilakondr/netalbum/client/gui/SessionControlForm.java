/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ru.danilakondr.netalbum.client.gui;

import java.io.File;
import java.net.URI;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.YES_NO_OPTION;
import ru.danilakondr.netalbum.client.connect.SessionTable;
import ru.danilakondr.netalbum.client.connect.Session;
import ru.danilakondr.netalbum.api.message.Response;
import ru.danilakondr.netalbum.client.NetAlbumPreferences;
import ru.danilakondr.netalbum.client.SessionInfo;

/**
 *
 * @author danko
 */
public class SessionControlForm extends javax.swing.JFrame {
    private final SessionTable sessionTable = new SessionTable();
    private NetAlbumPreferences cfg;
    
    /**
     * Creates new form SessionControlForm
     */
    public SessionControlForm() {
        initComponents();
    }
    
    public void setConfiguration(NetAlbumPreferences cfg) {
        this.cfg = cfg;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btnInitSession = new javax.swing.JButton();
        btnCloseSessions = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jToolBar1.setRollover(true);

        btnInitSession.setText("Инициировать сессию");
        btnInitSession.setFocusable(false);
        btnInitSession.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnInitSession.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnInitSession.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInitSessionActionPerformed(evt);
            }
        });
        jToolBar1.add(btnInitSession);

        btnCloseSessions.setText("Закрыть выбранные сессии");
        btnCloseSessions.setFocusable(false);
        btnCloseSessions.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCloseSessions.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCloseSessions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseSessionsActionPerformed(evt);
            }
        });
        jToolBar1.add(btnCloseSessions);

        jTable1.setModel(sessionTable);
        jScrollPane1.setViewportView(jTable1);

        jMenu1.setText("Файл");
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInitSessionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInitSessionActionPerformed
        JFileChooser dirChooser = new JFileChooser();
        dirChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        
        int result = dirChooser.showOpenDialog(this);
        File directory;
        if (result == JFileChooser.APPROVE_OPTION) {
            directory = dirChooser.getSelectedFile();
        } else return;
        
        String serverAddress = cfg.getServerAddress();
        URI serverUri = URI.create(serverAddress);
        
        Session session = new Session();
        session.addOnConnectedListener(s -> sessionTable.addSession(s));
        session.addOnCloseListener(s -> sessionTable.removeSession(s));
        session.addOnResponseListener(Response.Type.SESSION_CREATED, (s) -> s.loadImages(directory), true);
        session.init(serverUri, directory.getName());
    }//GEN-LAST:event_btnInitSessionActionPerformed

    private void btnCloseSessionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseSessionsActionPerformed
        if (jTable1.getSelectedRowCount() < 1)
            return;
        
        int[] rows = jTable1.getSelectedRows();
        for (int row: rows) {
            Session s = sessionTable.getSessionAt(row);
            s.close();
        }
    }//GEN-LAST:event_btnCloseSessionsActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        if (cfg.hasInitiatedSessions()) {
            int x = JOptionPane.showConfirmDialog(null, 
                    "Имеются незавершённые сессии. Восстановить их?", 
                    "Восстановление сессий", 
                    YES_NO_OPTION, 
                    ERROR_MESSAGE);

            if (x == JOptionPane.YES_OPTION) {
                List<SessionInfo> sessions = cfg.getInitiatedSessions();
                for (SessionInfo sessionInfo : sessions) {
                    Session session = new Session();
                    session.addOnConnectedListener(s -> sessionTable.addSession(s));
                    session.addOnCloseListener(s -> sessionTable.removeSession(s));
                    sessionInfo.setPath(sessionInfo.getPath());
                    session.restore(URI.create(sessionInfo.getUrl()), sessionInfo.getSessionId());
                }
            }
        }
        
    }//GEN-LAST:event_formWindowOpened
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCloseSessions;
    private javax.swing.JButton btnInitSession;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
